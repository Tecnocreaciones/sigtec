{% trans_default_domain 'CoramerSigtecReportTechnicalBundle' %}

<script type="text/javascript">
        function getTableExtraInfo(data)
        {
            return  '<strong>{{ 'sigtec.table.header.capacity'|trans }}</strong><br/><br/>' +
                    '<strong>{{ 'sigtec.table.header.theoretical'|trans }}:</strong> ' + data.theoretical + '<br>' +
                    '<strong>{{ 'sigtec.table.header.installed' |trans }}:</strong> ' + data.installed + '<br>' +
                    '<strong>{{ 'sigtec.table.header.busy' | trans }}:</strong> ' + data.busy + '<br>' +
                    '<strong>{{ 'sigtec.table.header.idle' | trans }}:</strong> ' + data.idle + '<br>' +
                    '<strong>{{ 'sigtec.production_level.percentage' | trans }}:</strong> ' + data.percentage + '<br>'
                    ;
        }
        var detailsColumns = [];
        var maxColumn = 5;
        function getTableExtraInfoWithMachinery(data)
        {
            if(data.process.model_machinery == undefined){
                return '{{ 'sigtec.table.content.empty.production_level'|trans }}';
            }
            var table = '<h3 class="thin">{{ 'sigtec.feature_machinery.process'|trans({},'CoramerSigtecReportTechnicalBundle') }}: <b>' + data.process.description + '</b></h3>';
            table += '<table class="table simple-table table-extra-info" get-table-info="getTableExtraInfoWithMachinerySub">' +
                        '<tr>';
                    $.each(data.process.model_machinery.features_machinery,function(index,value){
                        if(index >= maxColumn){
                            detailsColumns[index] = value._labels.label;
                            return ;
                        }
                        table += '<th>' +
                                    value._labels.label +
                                '</th>';
                    });
                    table += '</tr>';
                            $.each(data.machineries,function(index,machinery){
                                table += "<tr "; 
                                if(machinery._data.options){
                                    table += "data='"+ JSON.stringify(machinery._data.options)+"'";
                                }
                                table += ">";
                                    $.each(machinery._data.options,function(index,d){
                                        if(index >= maxColumn){
                                            return ;
                                        }
                                        table += '<td >';
                                            table += '<span>';
                                                table +=  d.value;
                                            table +=  '</span>';
                                        table += '</td>';
                                    });
                                table += '</tr>';
                            });
                    table += '</table>';
            return  '<strong>{{ 'sigtec.table.header.capacity'|trans }}</strong><br/><br/>' +
                    '<strong>{{ 'sigtec.table.header.theoretical'|trans }}:</strong> ' + data.theoretical + '<br>' +
                    '<strong>{{ 'sigtec.table.header.installed' |trans }}:</strong> ' + data.installed + '<br>' +
                    '<strong>{{ 'sigtec.table.header.busy' | trans }}:</strong> ' + data.busy + '<br>' +
                    '<strong>{{ 'sigtec.table.header.idle' | trans }}:</strong> ' + data.idle + '<br>' +
                    '<strong>{{ 'sigtec.production_level.percentage' | trans }}:</strong> ' + data.percentage + '<br>' + table
                    ;
        }
        
        function getTableExtraInfoWithMachinerySub(data){
            var response = '';
            $.each(data,function(index,d){
                if(index < maxColumn){
                    return ;
                }
                response += detailsColumns[index] + ': ';
                response += d.value;
                response += '<br/>';
            });
            return response;
        }
        function getTableExtraInfoSection2(data)
        {
            return  '<strong>{{ 'sigtec.table.header.separated_resin'|trans }}:</strong> ' + data.labels.separated_resin + '<br>' +
                    '<strong>{{ 'sigtec.table.header.total'|trans|raw }}:</strong> ' + data.total_area + '<br>' +
                    '<strong>{{ 'sigtec.table.header.covered'|trans|raw }}:</strong> ' + data.covered_area + '<br>';
        }
        function getTableExtraInfoSection4(data)
        {
            return  '<strong>{{ 'sigtec.table.header.requirement'|trans }}:</strong> ' + data.requirement + '<br>';
        }
        function getTableExtraInfoSection5(data)
        {
            return  '<strong>{{ 'sigtec.table.header.additive_supplier'|trans }}:</strong> ' + data.additive_supplier.description + '<br>' +
                    '<strong>{{ 'sigtec.table.header.concentration'|trans }}:</strong> ' + data.concentration + ' ' + data._labels.type_concentration + '<br>';
        }
        function getTableExtraInfoSection6(data)
        {
            return  '<strong>{{ 'sigtec.table.header.requirement'|trans }}:</strong> ' + data.requirement + '<br>' +
                    '<strong>{{ 'sigtec.table.header.supplier'|trans }}:</strong> ' + data.supplier + '<br>';
        }
        function getTableExtraInfoSection7(data)
        {
            return '<strong>{{ 'sigtec.table.header.requirement'|trans }}:</strong> ' + data.requirement;
        }
        function getTableExtraInfoSection9_2(data)
        {
            return '<strong>{{ 'sigtec.table.header.motive'|trans }}:</strong> ' + data.motive;
        }
        function getTableExtraInfoSection9_3(data)
        {
            return  '<strong>{{ 'sigtec.table.header.resin'|trans }}:</strong> ' + data.resin.description + '<br>' +
                    '<strong>{{ 'sigtec.table.header.product'|trans }}:</strong> ' + data.product.description + '<br>' +
                    '<strong>{{ 'sigtec.table.header.reason_purchase'|trans }}:</strong> ' + data.reason_purchase.description + '<br>';
        }
             $(document).ready(function() {
            //Example for table extra info methos to override
            /**
            function getTableExtraInfo(data)
            {
                return  '<div class="float-right">' +
                        '<button type="submit" class="button glossy mid-margin-right">' +
                        '<span class="button-icon"><span class="icon-mail"></span></span>' +
                        'Send mail' +
                        '</button>' +
                        '<button type="submit" class="button glossy">' +
                        '<span class="button-icon red-gradient"><span class="icon-cross"></span></span>' +
                        'Remove' +
                        '</button>' +
                        '</div>' +
                        '<strong>Name:</strong> ' + data.name + '<br>' +
                        '<strong>Created at:</strong> ' + data.created_at + '<br>' +
                        '<strong>Updated at:</strong> ' + data.updated_at + '<br>'
                        ;
            }
            **/
           // Table extra info - styled
            $('.table-extra-info').on('click', 'tbody td', function(event)
            {
                // Do not process if something else has been clicked
                if (event.target !== this)
                {
                    return;
                }
                var tr = $(this).parent(),
                        row = tr.next('.row-drop'),
                        rows;
                        
                var getTableInfoFunction = tr.parent().parent().attr('get-table-info');
                // If click on a special row
                if (tr.hasClass('row-drop'))
                {
                    return;
                }

                // If there is already a special row
                if (row.length > 0)
                {
                    // Un-style row
                    tr.children().removeClass('glossy color-white');

                    // Remove row
                    row.remove();

                    return;
                }

                // Remove existing special rows
                rows = tr.siblings('.row-drop');
                if (rows.length > 0)
                {
                    // Un-style previous rows
                    rows.prev().children().removeClass('glossy color-white');

                    // Remove rows
                    rows.remove();
                }

                var attrData = tr.attr('data');
                if(attrData == undefined){
                    return ;
                }
                var data = $.parseJSON(attrData);
                // Style row
                tr.children().addClass('glossy color-white');
                
                // Add fake row
                if(getTableInfoFunction != undefined ){
                    var tableExtraInfo = eval(getTableInfoFunction)(data);
                }else{
                    var tableExtraInfo = getTableExtraInfo(data);
                }
                $('<tr class="row-drop">' +
                        '<td colspan="' + tr.children().length + '"><strong>' +
                        tableExtraInfo +
                        '</strong></td>' +
                        '</tr>').insertAfter(tr);

            });
            
        });
            
    </script>