{% extends '::base.html.twig' %}
{% block stylesheets %}
    <!-- Additional styles -->
    <link rel="stylesheet" href="{{ asset('bundles/coramersigtecweb/frontend/css/styles/form3860.css?v=1') }}">
    <link rel="stylesheet" href="{{ asset('bundles/coramersigtecweb/frontend/css/styles/switches3860.css?v=1') }}">
    <link rel="stylesheet" href="{{ asset('bundles/coramersigtecweb/frontend/css/styles/table3860.css?v=1') }}">

    <!-- DataTables -->
    <link rel="stylesheet" href="{{ asset('bundles/coramersigtecweb/frontend/js/libs/DataTables/jquery.dataTables3860.css?v=1') }}">
    <link rel="stylesheet" href="{{ asset('angular/app/lib/ng-table/ng-table.css') }}">
    <style>
        .loading-container {
            position: relative;
        }
        .loading-container .loading:before, .loading-container .loading:after {
            content: " ";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            min-height: 50px;
            min-width: 50px;
        }
        .loading-container .loading:before {
            background-color: white;
            opacity: 0.5;
        }
        div.paginator > span > a {

            margin: -3px;
        }
    </style>
{% endblock %}
{% block body -%}
    <h1>Company list</h1>

    <table class="records_list table responsive-table" id="example">
        <thead>
            <tr>
                <th>Id</th>
                <th></th>
                <th></th>
                <th></th>
                <th>Createdat</th>
                <th>Updatedat</th>

            </tr>
        </thead>

    </table>
    <br />
    <br />
    <div ng-controller="ShowCompanyList">

        <div class="table-header button-height">
            <div class="float-right">
                Search&nbsp;<input ng-model="model.search" type="text" name="table_search" id="table_search" value="" class="input mid-margin-left">
            </div>
            [[ model.search ]]
            Show&nbsp;<select name="range"  id="range" class="select blue-gradient glossy" style="width: 80px">
                <option value="10">10</option>
                <option value="20">20</option>
                <option value="40" selected="selected">40</option>
                <option value="100">100</option>
            </select> entries
        </div>
        <table class="table responsive-table" id="sorting-example1">

            <thead>
                <tr>
                    <th scope="col"><input type="checkbox" name="check-all" id="check-all" value="1"></th>
                    <th scope="col">Name</th>
                    <th scope="col" width="15%" class="align-center hide-on-mobile">Rif</th>
                    <th scope="col" width="15%" class="align-center hide-on-mobile-portrait">Validated</th>
                    <th scope="col" width="15%" class="hide-on-tablet">Status</th>
                    <th scope="col" width="100" class="align-right">Actions</th>
                </tr>
            </thead>

            <tfoot>
                <tr>
                    <td colspan="6">
                        [[ data._embedded.paginator.getNbResults ]] entries found
                    </td>
                </tr>
            </tfoot>

            <tbody>
                <tr ng-repeat="result in data._embedded.results" data="[[ result|json ]]">
                    <th scope="row" class="checkbox-cell"><input type="checkbox" name="checked[]" id="check-[[ result.id ]]" value="[[ result.id ]]"></th>
                    <td>[[ result.name ]]</td>
                    <td>[[ result.rif ]]</td>
                    <td>[[ result.rif_validated ]]</td>
                    <td>
                        [[ result.status ]]
                        <small class="tag">User</small> <small class="tag">Client</small> <small class="tag green-bg">Valid</small>
                    </td>
                    <td class="low-padding">
                        <span class="select compact full-width" tabindex="0">
                            <a href="[[ result._links.edit.href ]]" class="select-value">Edit</a>
                            <span class="select-arrow"></span>
                            <span class="drop-down">
                                <a href="javascript:void(0);">Put offline</a>
                                <a href="javascript:void(0);">Review</a>
                                <a href="javascript:void(0);">Put to trash</a>
                                <a href="[[ result._links.delete.href ]]">Delete</a>
                            </span>
                        </span>
                    </td>
                </tr>
            </tbody>

        </table>
        <form method="post" action="#" class="table-footer button-height large-margin-bottom">
            <div class="float-right">
                <div class="button-group">
                    <a href="javascript:void(0);" title="First page" class="button blue-gradient glossy"><span class="icon-previous"></span></a>
                    <a href="javascript:void(0);" title="Previous page" class="button blue-gradient glossy"><span class="icon-backward"></span></a>
                </div>

                <div class="button-group">
                    <a href="javascript:void(0);" title="Page 1" class="button blue-gradient glossy">1</a>
                    <a href="javascript:void(0);" title="Page 2" class="button blue-gradient glossy active">2</a>
                    <a href="javascript:void(0);" title="Page 3" class="button blue-gradient glossy">3</a>
                    <a href="javascript:void(0);" title="Page 4" class="button blue-gradient glossy">4</a>
                </div>

                <div class="button-group">
                    <a href="javascript:void(0);" title="Next page" class="button blue-gradient glossy"><span class="icon-forward"></span></a>
                    <a href="javascript:void(0);" title="Last page" class="button blue-gradient glossy"><span class="icon-next"></span></a>
                </div>
            </div>

            With selected:
            <select name="select90" class="select blue-gradient glossy mid-margin-left" style="width:128px">
                <option value="0">Delete</option>
                <option value="1">Duplicate</option>
                <option value="2">Put offline</option>
                <option value="3">Put online</option>
                <option value="4">Move to trash</option>
            </select>
            <button type="submit" class="button blue-gradient glossy">Go</button>
        </form>


        <br /><br /><br />    
        <div ng-controller="TableController">
            <button ng-click="tableParams.sorting({})" class="btn btn-default pull-right">Clear sorting</button>
            <button ng-click="tableParams.reload()" class="btn pull-right">Reload</button>
            <p><strong>Sorting:</strong> [[tableParams.sorting()|json]]

            <div loading-container="tableParams.settings().$loading">
                <table ng-table="tableParams" template-pagination="custom/pager" template-header="custom/header" class="table">
                    <tr ng-repeat="user in $data">
                        <td data-title="'Name'" sortable="'name'">
                            [[user.name]]
                        </td>
                        <td data-title="'Rif'" sortable="'rif'">
                            [[user.rif]]
                        </td>
                    </tr>
                </table>
                <script type="text/ng-template" id="custom/header">
                    <tr>
                    <td colspan="[[ $columns.length ]]">
            <div class="table-header button-height">
            <div class="float-right">
                Search&nbsp;<input ng-model="model.search" type="text" name="table_search" id="table_search" value="" class="input mid-margin-left">
            </div>
            [[ model.search ]]
            Show&nbsp;<select name="range"  id="range" class="select blue-gradient glossy" style="width: 80px">
                                            <option value="10">10</option>
                                            <option value="20">20</option>
                                            <option value="40" selected="selected">40</option>
                                            <option value="100">100</option>
                                    </select> entries
        </div>
        </td>
        </tr>
    
        </tr>
            <tr>
                <th ng-repeat="column in $columns" ng-class="{'sortable': parse(column.sortable), 'sort-asc': params.sorting()[parse(column.sortable)]=='asc', 'sort-desc': params.sorting()[parse(column.sortable)]=='desc' }" ng-click="sortBy(column, $event)" ng-show="column.show(this)" ng-init="template=column.headerTemplateURL(this)" class="header [[column.class]]">
                    <div ng-if="!template" ng-show="!template" ng-bind="parse(column.title)"></div>
                    <div ng-if="template" ng-show="template">
                        <div ng-include="template"></div>
                    </div>
                </th>
            </tr>
            <tr ng-show="show_filter" class="ng-table-filters">
                <th ng-repeat="column in $columns" ng-show="column.show(this)" class="filter">
                    <div ng-repeat="(name, filter) in column.filter">
                    <div ng-if="column.filterTemplateURL" ng-show="column.filterTemplateURL">
                    <div ng-include="column.filterTemplateURL"></div>
                    </div>
                    <div ng-if="!column.filterTemplateURL" ng-show="!column.filterTemplateURL">
                    <div ng-include="'ng-table/filters/' + filter + '.html'"></div>
                    </div>
                    </div>
                </th>
            </tr>
                </script>
                <script type="text/ng-template" id="custom/pager">
                    <div class="ng-cloak ng-table-pager">
                    <div ng-if="params.settings().counts.length" class="ng-table-counts btn-group pull-right">
                    <button ng-repeat="count in params.settings().counts" type="button" ng-class="{'active':params.count()==count}" ng-click="params.count(count)" class="btn btn-default"> 
                    <span ng-bind="count"></span>
                    </button>
                    </div>
                    </div> 
                    <form method="post" action="#" class="table-footer button-height ng-cloak ng-table-pager">
                    <div class="float-right pagination ng-table-pagination">
                    <div class="button-group">
                    <a ng-class="{'disabled': !page.active}" ng-repeat="page in pages" ng-if="evalFooter(page.type,['first','prev'])" ng-switch="page.type" ng-click="params.page(page.number)" class="button blue-gradient glossy">
                    <span ng-switch-when="first" class="icon-previous"></span>
                    <span ng-switch-when="prev" class="icon-backward"></span>
                    </a>
                    </div>
                    <div class="button-group">
                    <a ng-class="{'disabled': !page.active}" ng-repeat="page in pages" ng-if="evalFooter(page.type,['first','page','more','last'])" ng-switch="page.type" ng-click="params.page(page.number)" class="button blue-gradient glossy">
                    <span ng-switch-when="first" ng-bind="page.number"></span>
                    <span ng-switch-when="page" ng-bind="page.number"></span>
                    <span ng-switch-when="more">&#8230;</span>
                    <span ng-switch-when="last" ng-bind="page.number"></span>
                    </a>
                    </div>
                    <div class="button-group">
                    <a ng-class="{'disabled': !page.active}" ng-repeat="page in pages" ng-if="evalFooter(page.type,['last','next'])" ng-switch="page.type" ng-click="params.page(page.number)" class="button blue-gradient glossy">
                    <span ng-switch-when="last" <span class="icon-next"></span>
                    <span ng-switch-when="next" <span class="icon-forward"></span>
                    </a>
                    </div>
                    </div>

                    With selected:
                    <select name="select90" class="select blue-gradient glossy mid-margin-left" style="width:128px">
                    <option value="0">Delete</option>
                    <option value="1">Duplicate</option>
                    <option value="2">Put offline</option>
                    <option value="3">Put online</option>
                    <option value="4">Move to trash</option>
                    </select>
                    <button type="submit" class="button blue-gradient glossy">Go</button>
                    </form>
                </script>

            </div>
        </div>

        <ul>
            <li>
                <a href="{{ path('coramer_sigtec_company_new') }}">
                    Create a new entry
                </a>
            </li>
        </ul>

    </div>
{% endblock %}

{% block javascripts %}
    <!-- Template functions -->
    <script src="{{  asset('bundles/coramersigtecweb/frontend/js/developr.input.js') }}"></script>	
    <script src="{{ asset('bundles/coramersigtecweb/frontend/js/developr.table.js') }}"></script>

    <!-- Plugins -->
    <script src="{{ asset('bundles/coramersigtecweb/frontend/js/libs/jquery.tablesorter.min.js') }}"></script>
    <script src="{{ asset('bundles/coramersigtecweb/frontend/js/libs/DataTables/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('angular/app/lib/ng-table/ng-table.js') }}"></script> 


    <script src="{{ asset('angular/app/js/modules/sigtecModule.js') }}"></script>
    <script src="{{ asset('angular/app/js/services.js') }}"></script>
    <script src="{{ asset('angular/app/js/controllers.js') }}"></script>
    <script src="{{ asset('angular/app/js/filters.js') }}"></script>
    <script src="{{ asset('angular/app/js/directives.js') }}"></script>

{% endblock %}

{% block javascript %}

    <script>

coramerApp.requires.push('main');
var app = angular.module('main', ['ngTable'])
        .directive('loadingContainer', function() {
            return {
                restrict: 'A',
                scope: false,
                link: function(scope, element, attrs) {
                    var loadingLayer = angular.element('<div class="loading"></div>');
                    element.append(loadingLayer);
                    element.addClass('loading-container');
                    scope.$watch(attrs.loadingContainer, function(value) {
                        loadingLayer.toggleClass('ng-hide', !value);
                    });
                }
            };
        }).
        controller('TableController', function($scope, $filter, ngTableParams, $http) {
            $scope.tableParams = new ngTableParams({
                page: 1, // show first page
                count: 10, // count per page
                sorting: {
                    name: 'asc'     // initial sorting
                }
            }, {
                total: 0, // length of data
                getData: function($defer, params) {
                    var parameters = params.url();
                    parameters.limit = parameters.count;
                    $http.get('http://localhost/symfony/sigtec/web/app_dev.php/company/.json', {params: parameters}).success(function(data) {
                        params.total(data._embedded.paginator.getNbResults);
                        $defer.resolve(data._embedded.results);
                    });
                }
            });
        })
    </script>


    <script type="text/javascript">
        $(document).ready(function() {


            // Table sort - styled
            $('#sorting-example1').tablesorter({
                headers: {
                    0: {sorter: false},
                    5: {sorter: false}
                }
            }).on('click', 'tbody td', function(event)
            {
                // Do not process if something else has been clicked
                if (event.target !== this)
                {
                    return;
                }

                var tr = $(this).parent(),
                        row = tr.next('.row-drop'),
                        rows;

                // If click on a special row
                if (tr.hasClass('row-drop'))
                {
                    return;
                }

                // If there is already a special row
                if (row.length > 0)
                {
                    // Un-style row
                    tr.children().removeClass('anthracite-gradient glossy');

                    // Remove row
                    row.remove();

                    return;
                }

                // Remove existing special rows
                rows = tr.siblings('.row-drop');
                if (rows.length > 0)
                {
                    // Un-style previous rows
                    rows.prev().children().removeClass('anthracite-gradient glossy');

                    // Remove rows
                    rows.remove();
                }

                // Style row
                tr.children().addClass('anthracite-gradient glossy');
                var data = $.parseJSON(tr.attr('data'));
                // Add fake row
                $('<tr class="row-drop">' +
                        '<td colspan="' + tr.children().length + '">' +
                        '<div class="float-right">' +
                        '<button type="submit" class="button glossy mid-margin-right">' +
                        '<span class="button-icon"><span class="icon-mail"></span></span>' +
                        'Send mail' +
                        '</button>' +
                        '<button type="submit" class="button glossy">' +
                        '<span class="button-icon red-gradient"><span class="icon-cross"></span></span>' +
                        'Remove' +
                        '</button>' +
                        '</div>' +
                        '<strong>Name:</strong> ' + data.name + '<br>' +
                        '<strong>Created at:</strong> ' + data.created_at + '<br>' +
                        '<strong>Updated at:</strong> ' + data.updated_at + '<br>' +
                        '</td>' +
                        '</tr>').insertAfter(tr);

            }).on('sortStart', function()
            {
                var rows = $(this).find('.row-drop');
                if (rows.length > 0)
                {
                    // Un-style previous rows
                    rows.prev().children().removeClass('anthracite-gradient glossy');

                    // Remove rows
                    rows.remove();
                }
            });

        });
    </script>
    <script type="text/javascript">
        $(document).ready(function() {
            $("#range").change(function() {
                console.log($(this).val());
                $("#limit").val($(this).val());
            });
        });
    </script>
{% endblock %}