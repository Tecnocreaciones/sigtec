{% extends '::base.html.twig' %}
{% block stylesheets %}
    <!-- Additional styles -->
    <link rel="stylesheet" href="{{ asset('bundles/tecnocreacionesvzlagovernment/template/developer/css/styles/form3860.css?v=1') }}">
    <link rel="stylesheet" href="{{ asset('bundles/tecnocreacionesvzlagovernment/template/developer/css/styles/table3860.css?v=1') }}">

    <!-- DataTables -->
    <link rel="stylesheet" href="{{ asset('bundles/tecnocreacionesvzlagovernment/template/developer/angular/app/lib/ng-table/ng-table.css') }}">
   
    <style>
        .loading-container {
            position: relative;
        }
        .loading-container .loading:before, .loading-container .loading:after {
            content: " ";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            min-height: 50px;
            min-width: 50px;
        }
        .loading-container .loading:before {
            background-color: white;
            opacity: 0.5;
        }
    </style>
{% endblock %}

{% block javascripts %}
    <!-- Template functions -->
    <script src="{{  asset('bundles/tecnocreacionesvzlagovernment/template/developer/js/developr.input.js') }}"></script>	
    
    <!-- Plugins -->
    <script src="{{ asset('bundles/tecnocreacionesvzlagovernment/template/developer/angular/app/lib/ng-table/ng-table.js') }}"></script> 

{% endblock %}

{% block javascript %}

    <script>

mainApp.requires.push('tableFormat1');
var tableFormat1 = angular.module('tableFormat1', ['ngTable'])
        .directive('loadingContainer', function() {
            return {
                restrict: 'A',
                scope: false,
                link: function(scope, element, attrs) {
                    var loadingLayer = angular.element('<div class="loading"></div>');
                    element.append(loadingLayer);
                    element.addClass('loading-container');
                    scope.$watch(attrs.loadingContainer, function(value) {
                        loadingLayer.toggleClass('ng-hide', !value);
                    });
                }
            };
        })
        .directive('apiDataUrl',function($rootScope){
            return {
              link: function(scope, element, attrs){
                    $rootScope.apiDataUrl = attrs.apiDataUrl;
                }
            };
        })
        .controller('TableFormatController', function($scope, ngTableParams, $http) {
            $scope.itemEdit = function(url){
                document.location = url;
            }
            $scope.itemDelete = function(url){
                $.modal.confirm('Â¿{{ 'sigtec.question.delete'|trans }}?', function()
                {
                    $http.post(url,{_method:'DELETE'},{headers:{'X-Requested-With':'XMLHttpRequest'}}).success(function(data){
                        $.each(data.message,function(index, value){
                            notify(value,'', {
                                system:		false,   
                                autoClose:		4000,
                                icon:               '{{ asset('bundles/tecnocreacionesvzlagovernment/template/developer/img/icons/icon-success.png') }}',
                                iconOutside:        false,
                                closeButton:        true,
                                showCloseOnHover:	false,
                                groupSimilar:	true
                            });
                        });
                        $scope.tableParams.reload();
                    });
                }, function(){},
                {
                    textConfirm: '{{ 'sigtec.yes'|trans }}',
                    textCancel: '{{ 'sigtec.no'|trans }}'
                });
            }
            $scope.evalFooter = function(type,footer){
              for (var i = 0; i < footer.length; i++) {
                    if (footer[i] === type) {
                        return true;
                    }
                }
              return false;
           }
            $scope.tableParams = new ngTableParams({
                page: 1, // show first page
                count: 10 // count per page
            }, {
                total: 0, // length of data
                getData: function($defer, params) {
                    var parameters = params.url();
                    parameters.limit = parameters.count;
                    var apiUrl = $scope.apiDataUrl;
                    $http.get(apiUrl, {params: parameters}).success(function(data) {
                        params.total(data._embedded.paginator.getNbResults);
                        $defer.resolve($scope.results = data._embedded.results);
                    });
                }
            });
            $scope.tableParams.search = '';
              $scope.checkboxes = { 'checked': false, items: {} };

                // watch for check all checkbox
                $scope.$watch('checkboxes.checked', function(value) {
                    angular.forEach($scope.results, function(item) {
                        if (angular.isDefined(item.id)) {
                            $scope.checkboxes.items[item.id] = value;
                        }
                    });
                });

                // watch for data checkboxes
                $scope.$watch('checkboxes.items', function(values) {
                    if (!$scope.results) {
                        return;
                    }
                    var checked = 0, unchecked = 0,
                        total = $scope.results.length;
                    angular.forEach($scope.results, function(item) {
                        checked   +=  ($scope.checkboxes.items[item.id]) || 0;
                        unchecked += (!$scope.checkboxes.items[item.id]) || 0;
                    });
                    if ((unchecked == 0) || (checked == 0)) {
                        $scope.checkboxes.checked = (checked == total);
                    }
                    // grayed checkbox
                    angular.element(document.getElementById("select_all")).prop("indeterminate", (checked != 0 && unchecked != 0));
                }, true);

        })
    </script>
    <script type="text/ng-template" id="ng-table/headers/checkbox.html">
                    <input type="checkbox" ng-model="checkboxes.checked" id="select_all" name="filter-checkbox" value="" />
                </script>
                <script type="text/ng-template" id="custom/header">
                    <tr>
                    <td colspan="[[ $columns.length ]]">
            <div class="table-header button-height">
                <div class="float-right ng-cloak ng-table-pager">
                    {{ 'sigtec.search'|trans }}&nbsp;<input ng-model="tableParams.search" type="text" name="table_search" id="table_search" value="" class="input mid-margin-left">
                </div>
                    {{ 'sigtec.show'|trans }}&nbsp;
                    <select name="range"  class="select blue-gradient glossy" ng-model="count" ng-change="params.count(count)" style="width: 80px">
                            <option ng-repeat="count in params.settings().counts" ng-class="{'selected':params.count()==count}" value="[[count]]">
                                <span ng-bind="count">[[count]]</span>
                            </option>
                    </select>
                    <button ng-click="tableParams.reload()" class="button pull-right icon-refresh icon-size2 blue-gradient glossy" title="{{ 'sigtec.reload'|trans }}" ></button>
                    <button ng-click="tableParams.sorting({})" class="button pull-right icon-cross-round icon-size2 blue-gradient glossy" title="{{ 'sigtec.clear_sorting'|trans }}"></button>
                </div>
        </td>
        </tr>
    
        </tr>
            <tr>
                <th ng-repeat="column in $columns" ng-class="{'sortable': parse(column.sortable), 'sort-asc': params.sorting()[parse(column.sortable)]=='asc', 'sort-desc': params.sorting()[parse(column.sortable)]=='desc' }" ng-click="sortBy(column, $event)" ng-show="column.show(this)" ng-init="template=column.headerTemplateURL(this)" class="header [[column.class]]">
                    <div ng-if="!template" ng-show="!template" ng-bind="parse(column.title)"></div>
                    <div ng-if="template" ng-show="template">
                        <div ng-include="template"></div>
                    </div>
                </th>
            </tr>
            <tr ng-show="show_filter" class="ng-table-filters">
                <th ng-repeat="column in $columns" ng-show="column.show(this)" class="filter">
                    <div ng-repeat="(name, filter) in column.filter">
                    <div ng-if="column.filterTemplateURL" ng-show="column.filterTemplateURL">
                    <div ng-include="column.filterTemplateURL"></div>
                    </div>
                    <div ng-if="!column.filterTemplateURL" ng-show="!column.filterTemplateURL">
                    <div ng-include="'ng-table/filters/' + filter + '.html'"></div>
                    </div>
                    </div>
                </th>
            </tr>
                </script>
                <script type="text/ng-template" id="custom/pager">
                    <form method="post" action="#" class="table-footer button-height ng-cloak ng-table-pager">
                    <div class="float-right pagination ng-table-pagination">
                        <div class="button-group">
                            <a ng-class="{'disabled': !page.active}" ng-repeat="page in pages" ng-if="evalFooter(page.type,['first','prev'])" ng-switch="page.type" ng-click="params.page(page.number)" class="button blue-gradient glossy">
                                <span ng-switch-when="first" class="icon-previous"></span>
                                <span ng-switch-when="prev" class="icon-backward"></span>
                            </a>
                        </div>
                        <div class="button-group">
                        <a ng-class="{'disabled': !page.active}" ng-repeat="page in pages" ng-if="evalFooter(page.type,['first','page','more','last'])" ng-switch="page.type" ng-click="params.page(page.number)" class="button blue-gradient glossy">
                            <span ng-switch-when="first" ng-bind="page.number"></span>
                            <span ng-switch-when="page" ng-bind="page.number"></span>
                            <span ng-switch-when="more">&#8230;</span>
                            <span ng-switch-when="last" ng-bind="page.number"></span>
                        </a>
                        </div>
                        <div class="button-group">
                        <a ng-class="{'disabled': !page.active}" ng-repeat="page in pages" ng-if="evalFooter(page.type,['last','next'])" ng-switch="page.type" ng-click="params.page(page.number)" class="button blue-gradient glossy">
                        <span ng-switch-when="last" <span class="icon-next"></span>
                        <span ng-switch-when="next" <span class="icon-forward"></span>
                        </a>
                        </div>
                    </div>

                    {{ 'sigtec.with_selected'|trans }}:
                    <select name="select90" class="select blue-gradient glossy mid-margin-left" style="width:128px">
                    <option value="0">{{ 'sigtec.delete'|trans }}</option>
                    <option value="1">Move to trash</option>
                    </select>
                    <button type="submit" class="button blue-gradient glossy">{{ 'sigtec.go'|trans }}</button>
                    &nbsp;&nbsp;&nbsp; [[ params.settings().total ]] {{ 'sigtec.entries_found'|trans }}
                    </form>
                </script>

    <script type="text/javascript">
        $(document).ready(function() {
            //Example for table extra info methos to override
            /**
            function getTableExtraInfo(data)
            {
                return  '<div class="float-right">' +
                        '<button type="submit" class="button glossy mid-margin-right">' +
                        '<span class="button-icon"><span class="icon-mail"></span></span>' +
                        'Send mail' +
                        '</button>' +
                        '<button type="submit" class="button glossy">' +
                        '<span class="button-icon red-gradient"><span class="icon-cross"></span></span>' +
                        'Remove' +
                        '</button>' +
                        '</div>' +
                        '<strong>Name:</strong> ' + data.name + '<br>' +
                        '<strong>Created at:</strong> ' + data.created_at + '<br>' +
                        '<strong>Updated at:</strong> ' + data.updated_at + '<br>'
                        ;
            }
            **/
           // Table extra info - styled
            $('.table-extra-info').on('click', 'tbody td', function(event)
            {
                // Do not process if something else has been clicked
                if (event.target !== this)
                {
                    return;
                }

                var tr = $(this).parent(),
                        row = tr.next('.row-drop'),
                        rows;

                // If click on a special row
                if (tr.hasClass('row-drop'))
                {
                    return;
                }

                // If there is already a special row
                if (row.length > 0)
                {
                    // Un-style row
                    tr.children().removeClass('anthracite-gradient glossy');

                    // Remove row
                    row.remove();

                    return;
                }

                // Remove existing special rows
                rows = tr.siblings('.row-drop');
                if (rows.length > 0)
                {
                    // Un-style previous rows
                    rows.prev().children().removeClass('anthracite-gradient glossy');

                    // Remove rows
                    rows.remove();
                }

                // Style row
                tr.children().addClass('anthracite-gradient glossy');
                var data = $.parseJSON(tr.attr('data'));
                // Add fake row
                var tableExtraInfo = getTableExtraInfo(data);
                $('<tr class="row-drop">' +
                        '<td colspan="' + tr.children().length + '">' +
                        tableExtraInfo +
                        '</td>' +
                        '</tr>').insertAfter(tr);

            });
            
        });
    </script>
{% endblock %}